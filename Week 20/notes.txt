CLIENT SIDE RENDERING 

it is a modern technique where the rendering of the web page is done in the browser by js
it is sutomatically done by react 

browser ---> user ---> CDN 
white page <--- index.html <--- CDN 

script ---> CDN 
JS runs the dev logic < --- CDN 
page renders

after building a js file and html file is generated by the react building

client side rendering is not SEO optimised, user sees a flash before the reload, also there is the waterfall problem
the browser is waterfalling the requests one aftere the other.

SERVER SIDE RENDERING 

when the rendering process happens on the server, this is provided by next js

browser ---> url ---> next server ---> db 
page renders with the details <--- html is populated <--- next server 
the server lifted the components from the server. it is seo optimised, gets rid of hte waterfalling problem as only one request is sent

ssr is expensive, vercel bill is high
harder to scale as we cannot scale it through CDNs 

how to make SSR less expensive 

STATIC SITE GENERATION 

at ssg the page's HTML is generated at the build time and converted into a static file which does not change.
when the user goes on the page it is not re-rendered. this is only possible for static pages

by default the components in next js are statically generated, there is no re-rendering

we can revalidate the cache and then the page can be updated using revalidate
also we can use next actions
