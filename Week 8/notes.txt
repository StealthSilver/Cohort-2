CREATING A BASIC COURSE SELLING WEBSITE 

1. initialize teh new project
2. add express, jsonwebtoken and other dependencies
3. cerate index.js 
4. add route skeleton for user login, signup, create a course, delete a course, add course content
5. add routes for admin login, admin signup, create a course , delete a course, add course content
6. add middlewares for user andadmin auth
7. add the database (mongo), use the dotenv to store the database connection string
8. define the schema for User, Admin , Course , Purchase
9. Complete the routes for the user login, signup , Purchase a course, see courses (use express routing)
10. create the frontend

we do not store images in mongo , we store them in the web store and store the url in the DB

IMPROVMENTS 

1. cookie based authentication
2. session based authentication

best practices -> package.json 
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start" : "node index.js",
    "dev" : "nodemon index.js"
  },

the JWT_ADMIN_PASSWORD must be diffrent from JWT_USER_PASSWORD
as the id's can be same, so the passwords must be diffrent to have different payloads

.ENV file 
store all the secrets in a .env file here all the enviornment variables are stored
npm i dotenv

.env.example file must be there to give the dummy of .env file

Good to haves 
1. use cookies instead of the JWT for auth 
2. implement a payment gateway logic
3. Frontend in react

* in js projects build is rare, it is done for react -> html / css / js , c++ -> binary , tsc -> js
* we can use build scriot in package.jaon
* on github type mondodb+srv to get private mongodb urls

MONGO DB

servers are transient (they can go up and dowm). databases are persistant.

databases are created using the protocols that browsers dont understand. 
databases do not have granular access, so you cannot access selective data, that is why http servers are rewquired to put checks on the clients who are accessing the data
firebase tries to get rid of the http server and give granular access to the client

the http server does the auth checks

4 primitives are allowed by the database 

1. Create 
2. Read 
3. Update 
4. Delete