DATABASES

in a fullstack application there is a frontend, backend and a database
including a database will make the backend stateless (persiisting the data)

A database is a organised collection of data that are structured to enable efficient storage, retrieval and management of information

MONGO DB and NoSQL databases 

sql databases were the norm, then nosql databases came and they are designed to handele a variety of data models that may not
neatly fit into the tabular scheme of relational databases

Properties of Nosql db 

1. they are schemaless
this is a good choice for an application where there are nested folders, or the data is unscructured
the schema is flexoible

2. Scalability
the nosql databases aer designed to scale horizontally, in case of SQL we have to use sharding

a mongo cluster is a bunch of machines where data is stored

in case on mongo there are object ids

CRUD opeartions in the database -> index.js

02-zod -> index.js
IMPROVEMENTS 

1. SALTING 
passwords must not be saved as text -> hashing the password 
also even if the passwords are same but still the hashes must be different, for this we use salting

into the password some random string is added (salt) and then it is hashed
along with the hast the salt is also stored in the DB in plain text
this prevents the hackers to usr precomputed (rainbow) tables to crack passwords

we can use Bcrypt library for all this
becrypt implements salting and makes the brute forcing computationally infeasible

2. ERROR HANDLING 

if the server throws an error the whole server crashes, if there is any error prone function contain it in a try , catch block

3. INPUT VALIDATION

the user can input anything for that validate the inputs using the ZOD library
ZOD does the runtime schema checks and validation

