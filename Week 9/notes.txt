FOUNDATIONS OF REACT

for static websites react is not needed
before react and vue, jQuery and backbone.js were used to make DOM manipulation easier

every react website finally renders into HTML, CSS and JS

DYNAMIC WEBSITE CONCEPTS

basic dynamic website -> index.html 

STATE : this is the js object that represents the state of the app. in represents the dynamic things in the app (things that change)

State management tools
1. Redux
2. Recoil
3. Zustand


COMPONENTS : it represents how the DOM element should render, given a state. 
the components are re-usable and dynamic

Component Libraries 
1. Material UI
2. Ant Design
3. Chakra UI
4. React Bootstrap 
5. ShadCN

* A state change triggers a re-render. A re-render represents the actual DOM being manipulated when the state changes

* we usually have to define all teh components once and then we have to update the state of the app

React V-0 code -> index2.html

React files are written in JSX -> JavaScript XLM as it returns the components in XML

01-react -> useState

the entry point of any react app is the App.jsx file 

useState -> the useState is a hook that lets you add state to functional components. It returns an array with the current state and 
the function to update it.

02-react -> Conditional rendering with useEffect

03-react -> useEffect clear render


REACT RECAP -> 04-react

make a new react project using vite
can be done without vite using webpack

Vite is a build tool it consists of a dev server and a bundler to run the project with rollup

npm create vite@latest [name of project]

in the package.json there are two dependencies the react and the react dom 
to create a mobile application in react native we have to change the DOM to react-native

entry point : index.html (root component) -> main.jsx -> app.jsx 

remove all the predefiuned styles in both the css files and also the prewritten code in App.jsx
now we have an empty canvas to create our project

npm run dev to run the project

only the root div in html is controlled by react we can change other stuff in index.html and see the changes in the app
 <body>
    above the root
    <div id="root"></div>
    below the root
    <script type="module" src="/src/main.jsx"></script>
  </body>

benefits of react
1. structuring the app into components
2. difining and changging the state of the application

In react the components are the building block elements of the user interface. they allow to split the Ui into resuable and independent pieces