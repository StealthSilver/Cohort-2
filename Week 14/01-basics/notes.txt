TYPESCRIPT 

there are two kinds of languages Strongly and Loosly typed

Strongly Typed : Go, Typescript , C++ , Rust , Java
1. lesser runtime errors 
2. stricter codebase 
3. easy to catch errors at compile time

Loosly Typed : Python , Javascript , Pearl, php
1. Easy to write code 
2. Fast to bootstrap
3. Low learning curve

Typescript compiles down to js 
tsc is the typescript compiler
there are other compilers esbuild, svc etc.

tsconfig.json contains the meta information for typescript compilation

typescript is a superset of JS

to compile npx tsc -b 
then node [file name of the javascript file] 

typescript is never executed. it first compiles and then javascript runs

there are different typescript compilers tsc , es-build, swc

basic types in ts are 
number , string , boolean , null , undefined 

there is a any type -> this can be anything there won't be any error

tsconfig.json 

1.target:
The target option in a tsconfig.json file specifies the ECMAScript target version to which the TypeScript compiler will compile the TypeScript code.
To try it out, try compiling the following code for target being ES5 and es2020
"target" : "ES5"

2. rootDir
Where should the compiler look for .ts files. Good practise is for this to be the src folder
3. outDir
Where should the compiler look for spit out the .js files.

"rootDir": "./src",
"outDir": "./dist",

this will create a dist folder which will contain all the js files

4.noImplicitAny
Try enabling it and see the compilation errors on the following code

"noImplicitAny" : "false"

5. removeComments
Weather or not to include comments in the final js file


INTERFACE 
they let us accumulate types in objects, 
interfaces are used to define your custom types

TYPES
Very similar to interfaces , types let you aggregate data together.