1. Web Asswmbly and how C++ runs in the sandbox enviornment
2. Rust Ownership model for memory mamagement
3. Digital fingerptrinting and how to prevent video piracy(DRM , Screen Recording, Watermarking)
4. Opinions Market -> tokens -> liquidity pool
5. Why vidoes need to be transcoded
6. worker threads, cluster module
7. making your own async function from scratch
8. flushing the call stack to prioritise callback queue
9. creating the promise class
10. tl:dr 
11. sed and afk bash commands
12. todo list in html Week 3 -> index6.html + index4.html
13. firewall in digital ocean (week3.1)
14. hacking via ssh key (week3.1)
15. how backbone and jquery render state also code
16. airdrops and telegram crypto 
17. celery and time based transactions (cron jobs)
18. create a cli for todos (week4/cli)
19. create a file based todo application and an in memory todo application (week4/http)
20. how to change the default ip of the local ip resolution (sudo vi etc/host) (week4/http/-2:04)
21. mac address
22. reverse proxy with nginx
23. what is SSH
24. Tamplate Engine
25. * test website and learn from it : github.com/code100x/aptitude-test
26. create the map and filter function from scratch (week5/helper functions)
27. axios vs fetch
28. SSH keys in github
29. create a middleware function that logs each incoming request's HTTP method, URL, and timestamp to the console 
30. create a middleware function thar counts the number of requests
31. practice the full stack calculator (week 5 / cors)
32. how cors work under the hood -> github cors
33. cookie based authentication
34. browser fingerprinting, ip based fingerprinting, device checking, how to bypass the facebook authentication 
35. access key, refresh key approach for logging out and auth
36. how to copy someone's cookie and login as another person, how websites prevent this from happening
37. is storing jwt in local storage safe. injecting js and checking the local storage. http only cookie
38. otp login using twilio and google firebase on the contact numeber and email id
39. payments using razorpay
40. Oauth (logn with google , login with facebook) -> passport / blog - " explain meÂ like a 5 year old Oauth "
41. state vs statefull applications
42. If mongoose is schemaless why do we create schemas
43. relationships in mongo
44. hashing and salting the password before storing in the db (week7/01-mongo)
45. bearer token , auth token , api token , differences
46. adding timestamps on the todos created (week 7 / 02-zod)
47. regex
48. bloom filters 
49. virtual machine, CDN, EC2 deployment
50. why we cannot use CDN for next js apps