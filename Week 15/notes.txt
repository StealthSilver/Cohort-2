Second Brain app 

endpoints : 
Sign up 
Sign in 
Add new content 
Fetch all existing documents 
Delete a document
Create a shareable link for second brain
Fetch a brain by id

Bootstraping a typescript backend project
Creating Brainly Folder

1. npm init -y
2. npm i -D typescript : installing as a dev dependency
3. npx tsc --init : creating the tsconfig file
4. in the tsconfig set the rootDir : "./src" and the outDir: "./dist"
5. install dependencies : npm i express
6. create a scr folder 
7. create the index.ts file 
8. in index.js : import express from "express"
9. npm i -D @types/express : installing express types , install as a dev dependency as used only in development phase and not in production phase
10. const app = express();
11. npm i mongoose
12. npm i jsonwebtoken
13. npm i @types/jsonwebtoken
14. import mongoose and jwt 
15. initialize routes
16. create db.ts in src
17. create middleware.ts in src

.d.ts files are the decleration files where the types are specified for the files
for the npm libraries that are in js the type files are gives so the library also works in ts

*** TODO : creating an AI LLM over the Brainly app ***

when the knowledge base becoms really big, now it the user wants to query 
you can ask the LLM api with the relevent info from the knowledge base, 

1. functionality : creating the prompt with the relevent knowledge base
elastic search is the web 2 thing
vector search and embeddings is the LLM approach

Vector Embedding 

any text can be converted into a vector